---
- ansible.builtin.import_playbook: update.yml

- name : Add Site
  gather_facts: false
  hosts: all
  vars:
    - aci_login: &mso_login
        hostname: "{{ ansible_host }}"
        username: "{{ ansible_user }}"
        password: "{{ ansible_password }}"
        validate_certs: "{{ validate_certs }}"

  tasks:

    - name: Add a new DCNM site
      cisco.mso.mso_rest:
        <<: *mso_login
        path: "/api/config/v2/addsite/"
        method: post
        content:
          {
            "url": "{{ item.controller_url }}",
            "siteType": "{{ item.site_type }}",
            "dcnm": {
              "userName": "{{ item.controller_username }}",
              "password": "{{ item.controller_password }}",
              "siteList": [
                {
                  "siteName": "{{ item.name }}",
                  "fabricName": "{{ item.name }}",
                  "fabricTechnology": "{{ item.dcnm_fabric_technology }}",
                  "fabricType": "{{ item.dcnm_fabric_type }}",
                }
              ],
              "loginDomain": "{{ item.login_domain }}",
            },
            "securityDomains": [ ]
          }
      delegate_to: localhost
      loop: "{{ site }}"
      when: site is defined
      loop_control:
        pause: 2

    - name: Configure site as Managed by MSO
      cisco.mso.mso_site:
        <<: *mso_login
        site: "{{ item.name }}"
        apic_username: "{{ item.controller_username }}"
        apic_password: "{{ item.controller_password }}"
        apic_site_id: "{{ item.site_id | int }}"
        urls:
          - "{{ item.controller_url }}"
        state:  "{{ item.status if item.status is defined else omit }}"
      loop: "{{ site }}"
      delegate_to: localhost
      when: site is defined
#      ignore_errors: yes
